{"version":3,"sources":["components/Sidebar.js","components/Chat.js","components/SendMessageForm.js","components/Auth.js","utils/usersData.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","className","to","activeClassName","Chat","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","messages","title","map","message","index","localStorage","getItem","name","text","ref","SendMessageForm","useState","setText","onSubmit","e","preventDefault","sendMessage","value","onChange","target","placeholder","type","Auth","setName","password","setPassword","minLength","required","usersData","App","setMessages","floodMessages","setFloodMessages","loggedIn","setLoggedIn","usersInfo","history","useHistory","JSON","parse","exact","path","newMessage","setItem","stringify","newFloodMessage","info","find","item","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.bbe2eee6.chunk.js","sourcesContent":["import '../styles/Sidebar.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Sidebar(props) {\r\n  \r\n\r\n  return(\r\n    <nav className=\"sidebar\">\r\n      <NavLink to='/workchat' className=\"sidebar__link\" activeClassName=\"sidebar__link_active\">Work</NavLink>\r\n      <NavLink to='/floodchat' className='sidebar__link' activeClassName=\"sidebar__link_active\">Flood</NavLink>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import '../styles/Chat.css'\r\nimport {useEffect, useRef} from 'react';\r\n\r\nfunction Chat(props) {\r\n\r\n  const messagesEndRef = useRef(null);\r\n\r\n  function scrollToBottom() {\r\n    messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\r\n  }\r\n  \r\n  useEffect(scrollToBottom, [props.messages]);\r\n\r\n  return(\r\n    <section className=\"chat\">\r\n      <p className=\"chat__title\">{props.title}</p>\r\n      <ul className=\"chat__message-list\">\r\n        {props.messages.map((message, index) => {\r\n          return (\r\n              <li className={`chat__message ${localStorage.getItem('userName') === message.name && 'chat__message_own'}`} key={index}>\r\n                <p className=\"chat__message-sender\">{message.name}</p>\r\n                <p className={`chat__message-text ${localStorage.getItem('userName') === message.name && 'chat__message-text_own'}`}>{message.text}</p>\r\n              </li>    \r\n          )\r\n        })}\r\n      </ul>\r\n      <div ref={messagesEndRef}></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Chat;","import '../styles/SendMessageForm.css'\r\nimport {useState} from 'react';\r\n\r\nfunction SendMessageForm(props) {\r\n  \r\n  const [text, setText] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.sendMessage({\r\n      name: localStorage.getItem(\"userName\"),\r\n      text\r\n    });\r\n    setText('');\r\n  }\r\n\r\n  return(\r\n    <form className=\"send-form\" onSubmit={handleSubmit}>\r\n      <input \r\n        className=\"send-form__input\" \r\n        value={text}\r\n        onChange={handleChange} \r\n        placeholder='Поведайте всем о чем-нибудь!' \r\n        type=\"text\"\r\n       />\r\n      <button className=\"send-form__submit\" type=\"submit\"></button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SendMessageForm;","import {useState} from 'react';\r\nimport '../styles/Auth.css';\r\n\r\nfunction Auth(props) {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      name,\r\n      password\r\n    });\r\n\r\n  }\r\n\r\n  return(\r\n    <div className=\"auth\">\r\n      <div className=\"auth__container\">\r\n        <h1 className=\"auth__title\">Авторизируйтесь</h1>\r\n        <form className=\"auth__form\" onSubmit={onSubmit}>\r\n          <input className=\"auth__input\" onChange={handleName} value={name} type=\"text\" placeholder=\"Введите ваше имя\" name=\"user\" minLength=\"2\" required />\r\n          <input className=\"auth__input\" onChange={handlePassword} value={password} type=\"password\" placeholder=\"Введите пароль\" name=\"password\" minLength=\"2\" required />\r\n          <button className=\"auth__submit\" type=\"submit\">Войти</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","const usersData = [\r\n  {\r\n    name: \"Nik\",\r\n    password: \"123456\"\r\n  },\r\n\r\n  {\r\n    name: \"Alex\",\r\n    password: \"123123\"\r\n  }\r\n];\r\n\r\nexport default usersData;"," import './styles/App.css'\r\n import Sidebar from './components/Sidebar.js';\r\n import Chat from './components/Chat.js';\r\n import SendMessageForm from './components/SendMessageForm';\r\n import Auth from './components/Auth.js';\r\n import {Switch, Route, Redirect, useHistory} from 'react-router-dom';\r\n import usersData from './utils/usersData.js';\r\n import {useState, useEffect} from 'react';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState();\r\n  const [floodMessages, setFloodMessages] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [usersInfo, setUsersInfo] = useState(usersData);\r\n  const history = useHistory();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"workMessages\")) {\r\n      setMessages(JSON.parse(localStorage.getItem(\"workMessages\")));\r\n    }\r\n    else {\r\n      setMessages([])\r\n    }\r\n    \r\n    if (localStorage.getItem(\"floodMessages\")) {\r\n      setFloodMessages(JSON.parse(localStorage.getItem(\"floodMessages\")));\r\n    }\r\n\r\n    else {\r\n      setFloodMessages([]);\r\n    }\r\n  }, [])\r\n\r\n  function sendMessage(newMessage) {\r\n    setMessages([...messages, newMessage])\r\n    localStorage.setItem(\"workMessages\", JSON.stringify([...messages, newMessage]));\r\n  }\r\n  \r\n  function sendFloodMessage(newFloodMessage) {\r\n    setFloodMessages([...floodMessages, newFloodMessage]);\r\n    localStorage.setItem(\"floodMessages\", JSON.stringify([...floodMessages, newFloodMessage]));\r\n  }\r\n\r\n  function handleAuthSubmit(info) {\r\n   if (usersInfo.find(item => item.name === info.name && item.password === info.password))\r\n    {\r\n      setLoggedIn(true);\r\n      history.push('/workchat');\r\n      localStorage.setItem('userName', info.name);\r\n    }\r\n   else {\r\n      return\r\n   }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page__container\">\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            {loggedIn ? <Redirect to='/workchat' /> : <Redirect to='/auth' />}\r\n          </Route>\r\n\r\n          <Route path='/workchat'>\r\n            {loggedIn ?\r\n              <> \r\n                <Sidebar />\r\n                <Chat \r\n                  title='Рабочий чат'\r\n                  messages={messages}\r\n                />\r\n                <SendMessageForm \r\n                  sendMessage={sendMessage}\r\n                />\r\n              </>\r\n            :\r\n            <Redirect to='/auth' />\r\n            }\r\n          </Route>\r\n\r\n          <Route path='/floodchat'>\r\n            {loggedIn ? \r\n              <>\r\n                <Sidebar />\r\n                <Chat \r\n                  title='Беседа'\r\n                  messages={floodMessages}\r\n                />\r\n                <SendMessageForm\r\n                  sendMessage={sendFloodMessage}\r\n                />\r\n              </>\r\n            :\r\n            <Redirect to='/auth' />  \r\n            }\r\n          </Route>\r\n          <Route path='/auth'>\r\n            <Auth onSubmit={handleAuthSubmit} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}